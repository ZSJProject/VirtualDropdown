/* 
 *  Name: vsdropdown
 *  Description: Virtual scroll dropdown - AngularJS reusable UI component
 *  Version: 0.0.3
 *  Author: kekeh
 *  Homepage: http://kekeh.github.io/vsdropdown
 *  License: MIT
 *  Date: 2015-07-03
 */
angular.module('template-vsdropdown-0.0.3.html', ['templates/vsdropdown.html', 'templates/vsscrollbar.html']);

angular.module("templates/vsdropdown.html", []).run(["$templateCache", function ($templateCache) {
  $templateCache.put("templates/vsdropdown.html",
      "<div class=\"vsdropdown\" ng-click=\"$event.stopPropagation();\"\n" +
      "     ng-style=\"{'border-radius':showSelector?'2px 2px 0 0':'2px'}\">\n" +
      "    <div class=\"vsselectiongroup\">\n" +
      "\n" +
      "        <div ng-if=\"options.selection.maximum > 1\" ng-include=\"'vsoverlay.html'\"></div>  \n" +
      "        \n" +
      "        <span class=\"vsselection\" ng-style=\"{'padding-right': selectedItems.length > 1 ? '60px' : '30px'}\"\n" +
      "              ng-click=\"selector()\">\n" +
      "            <div class=\"vsselecteditem vsselecteditemcolor\" ng-show=\"$index === 0\" ng-click=\"$event.stopPropagation()\"\n" +
      "                 ng-repeat=\"item in selectedItems track by $index\">\n" +
      "                <div class=\"vsiteminclude\" ng-include=\"'vsitemcontent.html'\" ng-init=\"id=1\"></div>\n" +
      "            </div>\n" +
      "        </span>\n" +
      "        \n" +
      "        <span class=\"vsselbtngroup\">\n" +
      "            <button class=\"vsbtnselections\" ng-if=\"selectedItems.length > 1\" ng-click=\"openOverlay()\">\n" +
      "                <span class=\"icon vsiconselections icon-selections\"></span>\n" +
      "            </button>\n" +
      "            <button class=\"vsbtnselector\" ng-click=\"selector()\">\n" +
      "                <span class=\"icon vsiconselector\" ng-class=\"showSelector ? 'icon-up' : 'icon-down'\"></span>\n" +
      "            </button>\n" +
      "            <span class=\"vsselectioncounttxt\" ng-if=\"options.selection.showCount && selectedItems.length > 1\"\n" +
      "                  ng-click=\"openOverlay()\">{{selectedItems.length}}</span>\n" +
      "        </span>\n" +
      "    </div>\n" +
      "\n" +
      "    <div class=\"vsselector\" ng-show=\"showSelector\">\n" +
      "        <table style=\"width: 100%\" class=\"vsfiltergroup\" ng-show=\"options.filter.enabled\"\n" +
      "               ng-class=\"{'vsnohitsfilter': filteredItemCount === 0, 'vshitsfilter': filteredItemCount > 0}\">\n" +
      "            <tr>\n" +
      "                <td>\n" +
      "                    <input class=\"vsfilterinput\" type=\"text\"\n" +
      "                           ng-model=\"filterText\"\n" +
      "                           ng-model-options=\"{debounce: config.FILTERING_BEGIN_DELAY}\"\n" +
      "                           data-ng-trim=\"false\"\n" +
      "                           placeholder=\"{{options.filter.filterPlaceholderTxt}}\"\n" +
      "                           ng-keydown=\"keyDown($event)\"\n" +
      "                           ng-blur=\"focusIdx=-1\"/>\n" +
      "                </td>\n" +
      "                <td class=\"vsfiltermatch\">\n" +
      "                    <div class=\"vsfiltermatchtext\">{{filteredItemCount > 0 ? filteredItemCount :\n" +
      "                        options.filter.noHitsTxt}}\n" +
      "                    </div>\n" +
      "                </td>\n" +
      "                <td class=\"vsiconfilterclear\" style=\"width:24px\" ng-show=\"filterText.length > 0\">\n" +
      "                    <span class=\"icon vsiconclear icon-clear\" ng-click=\"clearFilter()\"\n" +
      "                          ng-keydown=\"$event.which === 13 ? clearFilter() : null\" tabindex=\"0\"></span>\n" +
      "                </td>\n" +
      "            </tr>\n" +
      "        </table>\n" +
      "\n" +
      "        <div vsscrollbar items=\"options.items\" items-in-page=\"{{options.visibleItemCount}}\"\n" +
      "             ng-keydown=\"keyDown($event)\" ng-focus=\"focus()\" ng-blur=\"blur()\" list-focus\n" +
      "             height=\"{{options.visibleItemCount*config.ITEM_HEIGHT-1}}\"\n" +
      "             on-scroll-change-fn=\"onScrollChange(topIndex, maxIndex, topPos, maxPos, filteredPageCount, filteredItemCount, visibleItems)\"\n" +
      "             on-focus-scrollbox-fn=\"onFocusScrollbox(focused)\"\n" +
      "             tabindex=\"0\">\n" +
      "            <div class=\"vsitem\"\n" +
      "                 ng-repeat=\"item in visibleItems track by $index\"\n" +
      "                 ng-click=\"itemClicked($index, $event)\"\n" +
      "                 ng-class=\"{'vsselecteditemcolor':isItemSelected(item),'vsfocuseditemcolor':focusIdx===$index}\">\n" +
      "                <div class=\"vsiteminclude\" ng-include=\"'vsitemcontent.html'\" ng-init=\"id=2\"></div>\n" +
      "            </div>\n" +
      "        </div>\n" +
      "    </div>\n" +
      "\n" +
      "    <script type=\"text/ng-template\" id=\"vsitemcontent.html\">\n" +
      "        <table class=\"vsitemcontent\">\n" +
      "            <tr>\n" +
      "                <td style=\"width:18px\" ng-if=\"options.input.isObject && options.input.properties.enabled\">\n" +
      "                    <span class=\"icon vsiconproperties\" popover-window\n" +
      "                          ng-click=\"showProperties($event)\"\n" +
      "                          ng-keydown=\"$event.which === 13 ? showProperties($event) : null\"\n" +
      "                          ng-class=\"popover!==null ? 'icon-down' : 'icon-right'\" tabindex=\"0\"></span>\n" +
      "                </td>\n" +
      "                <td class=\"vsitemtext\" tooltip-window=\"{{visiblePropName === null ? item : item[visiblePropName]}}\">\n" +
      "                    {{visiblePropName === null ? item : item[visiblePropName]}}\n" +
      "                </td>\n" +
      "                <td ng-if=\"id === 1\" style=\"width:16px\">\n" +
      "                    <span class=\"icon vsiconcross icon-cross\" tabindex=\"0\" ng-click=\"removeItem($index, $event)\"\n" +
      "                          ng-keydown=\"$event.which === 13 ? removeItem($index, $event) : null\"></span>\n" +
      "                </td>\n" +
      "                <td class=\"vsiconcheck\" ng-if=\"id === 2\" ng-show=\"isItemSelected(item)\" style=\"width:22px\">\n" +
      "                    <span class=\"icon icon-check\"></span>\n" +
      "                </td>\n" +
      "            </tr>\n" +
      "        </table>\n" +
      "    </script>\n" +
      "\n" +
      "    <script type=\"text/ng-template\" id=\"vsoverlay.html\">\n" +
      "        <div class=\"vsoverlay\" opacity ng-style=\"{'opacity': opacity}\" ng-if=\"showOverlay && selectedItems.length > 1\"\n" +
      "             ng-mouseleave=\"closeOverlay()\">\n" +
      "            <div class=\"vsoverlaytitle\">\n" +
      "                <span class=\"vsoverlaytitletext\">{{selectedItems.length}} {{options.selection.selectionsTxt}}</span>\n" +
      "                <span class=\"icon vsiconoverlaycross icon-cross\"\n" +
      "                      ng-click=\"closeOverlay()\"\n" +
      "                      ng-keydown=\"$event.which === 13 ? closeOverlay() : null\" tabindex=\"0\"></span>\n" +
      "            </div>\n" +
      "            <div class=\"vsselecteditem vsselecteditemcolor\" ng-click=\"$event.stopPropagation()\"\n" +
      "                 ng-repeat=\"item in selectedItems track by $index\">\n" +
      "                <div class=\"vsiteminclude\" ng-include=\"'vsitemcontent.html'\" ng-init=\"id=1\"></div>\n" +
      "            </div>\n" +
      "        </div>\n" +
      "    </script>\n" +
      "\n" +
      "    <script type=\"text/ng-template\" id=\"vstooltip.html\">\n" +
      "        <div class=\"vstooltip\" style=\"margin-top:-20px;margin-left:10px\" opacity ng-style=\"{'opacity': opacity}\"\n" +
      "             ng-click=\"closeTooltip($event)\"\n" +
      "             ng-keydown=\"$event.which === 13 ? closeTooltip($event) : null\" tabindex=\"0\">\n" +
      "            <span class=\"vstooltiptext\">{{visiblePropName === null ? item : item[visiblePropName]}}</span>\n" +
      "        </div>\n" +
      "    </script>\n" +
      "\n" +
      "    <script type=\"text/ng-template\" id=\"vspopover.html\">\n" +
      "        <div class=\"vstooltip\" style=\"margin-top:-24px;margin-left:24px\" opacity ng-style=\"{'opacity': opacity}\">\n" +
      "            <table class=\"vsproperties\" ng-click=\"closeProperties();$event.stopPropagation()\">\n" +
      "                <tr>\n" +
      "                    <th>{{options.input.properties.propertyTitle}}</th>\n" +
      "                    <th>{{options.input.properties.valueTitle}}</th>\n" +
      "                </tr>\n" +
      "                <tr ng-repeat=\"prop in options.input.properties.props\">\n" +
      "                    <td>{{prop.trim()}}</td>\n" +
      "                    <td>{{item[prop.trim()]}}</td>\n" +
      "                </tr>\n" +
      "            </table>\n" +
      "        </div>\n" +
      "    </script>\n" +
      "\n" +
      "</div>");
}]);

angular.module("templates/vsscrollbar.html", []).run(["$templateCache", function ($templateCache) {
  $templateCache.put("templates/vsscrollbar.html",
      "<table class=\"vsscrollbarcontainer\" ng-show=\"filteredItems.length > 0\"\n" +
      "       style=\"border-collapse:separate; border-spacing:0; padding:0; height:100%;\">\n" +
      "    <tr>\n" +
      "        <td style=\"width:100%; padding:0; vertical-align: top;\">\n" +
      "            <div class=\"vsscrollbarcontent\" ng-style=\"{'margin': scrollbarVisible ? '1px 0 1px 1px' : '1px'}\"\n" +
      "                 style=\"overflow-y:hidden; padding:0; outline:0;\" ng-transclude></div>\n" +
      "        </td>\n" +
      "        <td style=\"padding:0; height:100%;\">\n" +
      "            <div class=\"vsscrollbar\" ng-show=\"scrollbarVisible\"\n" +
      "                 style=\"float: right; height:100%; padding:0; margin:1px;\">\n" +
      "                <div class=\"vsscrollbox\" tabindex=\"0\" ng-focus=\"scrollBoxFocus()\" ng-blur=\"scrollBoxBlur()\"\n" +
      "                     ng-style=\"{'height': boxHeight + 'px'}\"\n" +
      "                     ng-click=\"$event.stopPropagation();\" style=\"position:relative; padding:0; outline:0;\"></div>\n" +
      "            </div>\n" +
      "        </td>\n" +
      "    </tr>\n" +
      "</table> \n" +
      "");
}]);

angular.module("vsscrollbar", ["template-vsdropdown-0.0.3.html"]).constant("vsscrollbarConfig", {
  ITEMS_IN_PAGE: 6,
  SCROLLBAR_HEIGHT: 0,
  SCROLLBOX_MIN_HEIGHT: 18
}).factory("vsscrollbarEvent", function () {
  function a(a, b, c) {
    a.$broadcast("vsmessage", {type: b, value: c})
  }

  var b = {};
  return b.setIndex = function (b, c) {
    a(b, "setIndex", c)
  }, b.setPosition = function (b, c) {
    a(b, "setPosition", c)
  }, b.filter = function (b, c) {
    a(b, "filter", c)
  }, b.addItem = function (b, c, d) {
    a(b, "addItem", {index: c, item: d})
  }, b.updateItem = function (b, c, d) {
    a(b, "updateItem", {index: c, item: d})
  }, b.deleteItem = function (b, c) {
    a(b, "deleteItem", c)
  }, b
}).service("vsscrollbarService", function () {
  this.calcIndex = function (a, b, c) {
    var d = 0;
    return this.checkIsMaxPos(a, c) ? d = b : a > 0 && (d = this.validateIndex(Math.round(a / c * b), b)), d
  }, this.calcScrollPos = function (a, b, c) {
    var d = 0;
    return a > 0 && (d = this.checkIsMaxIndex(a, b) ? c : Math.round(a / b * c)), this.validatePos(d, c, a, b)
  }, this.validateIndex = function (a, b) {
    return 0 >= a ? 0 : this.checkIsMaxIndex(a, b) ? b : a
  }, this.validatePos = function (a, b, c, d) {
    return angular.isUndefined(c) || angular.isUndefined(d) ? 0 >= a ? 0 : a >= b ? b : a : 0 >= a && c > 0 ? 1 : a >= b && d > c ? b - 1 : a
  }, this.checkIsMaxIndex = function (a, b) {
    return a >= b
  }, this.checkIsMaxPos = function (a, b) {
    return a >= b
  }
}).directive("vsscrollbar", ["$filter", "$timeout", "$document", "vsscrollbarService", "vsscrollbarConfig", function (a, b, c, d, e) {
  return {
    restrict: "AE",
    scope: {ngModel: "=?", items: "=items", onScrollChangeFn: "&", onFocusScrollboxFn: "&"},
    transclude: !0,
    templateUrl: "templates/vsscrollbar.html",
    link: function (f, g, h) {
      function i(a) {
        a.preventDefault(), I = angular.isUndefined(a.changedTouches) ? a.clientY - L : a.changedTouches[0].clientY - L, c.on(angular.isUndefined(a.changedTouches) ? "mousemove" : "touchmove", j), c.on(angular.isUndefined(a.changedTouches) ? "mouseup" : "touchend", k)
      }

      function j(a) {
        var b = angular.isUndefined(a.changedTouches) ? a.clientY - I : a.changedTouches[0].clientY - I;
        v(d.validatePos(b, M)), f.$apply()
      }

      function k(a) {
        c.off(angular.isUndefined(a.changedTouches) ? "mousemove" : "touchmove", j), c.off(angular.isUndefined(a.changedTouches) ? "mouseup" : "touchend", k)
      }

      function l(a) {
        I = a.changedTouches[0].clientY, c.on("touchmove", m), c.on("touchend", n)
      }

      function m(a) {
        a.preventDefault();
        var b = a.changedTouches[0].clientY;
        x(I > b ? G : -G), I = b, f.$apply()
      }

      function n() {
        c.off("touchmove", m), c.off("touchend", n)
      }

      function o(a) {
        var b = a.offsetY || a.layerY;
        v(d.validatePos(b < f.boxHeight ? 0 : b, M)), f.$apply()
      }

      function p() {
        F[0].focus()
      }

      function q(a) {
        a.preventDefault();
        var b = (a.wheelDelta || -a.detail) <= 0;
        x(b ? G : -G)
      }

      function r(a) {
        (38 === a.which || 40 === a.which) && (a.preventDefault(), x(38 === a.which ? -G : G))
      }

      function s(a, b) {
        "setIndex" === b.type && b.value !== J && b.value >= 0 ? w(Math.round(b.value), !0) : "setPosition" === b.type && b.value !== L && b.value >= 0 ? v(d.validatePos(Math.round(b.value), M)) : "filter" === b.type ? (N = b.value, t(N, 0)) : "addItem" === b.type && b.value.index >= 0 && b.value.index <= f.items.length ? (f.items.splice(b.value.index, 0, b.value.item), t(N, J)) : "updateItem" === b.type && b.value.index >= 0 && b.value.index < f.items.length ? (f.items[b.value.index] = b.value.item, t(N, J)) : "deleteItem" === b.type && b.value >= 0 && b.value < f.items.length && (f.items.splice(b.value, 1), t(N, J))
      }

      function t(b, c) {
        f.filteredItems = "" === b ? f.items : a("filter")(f.items, b), f.scrollbarVisible = f.filteredItems.length > G, u(), w(c, !1)
      }

      function u() {
        var a = Math.floor(H / (f.filteredItems.length / G));
        f.boxHeight = a < e.SCROLLBOX_MIN_HEIGHT ? e.SCROLLBOX_MIN_HEIGHT : a, K = f.filteredItems.length - G < 0 ? 0 : f.filteredItems.length - G, M = H - f.boxHeight < 0 ? 0 : H - f.boxHeight
      }

      function v(a) {
        (a = Math.round(a)) !== L && (L = a, J = d.calcIndex(L, K, M), y())
      }

      function w(a, b) {
        (a = d.validateIndex(a, K)) === J && b || (J = a, L = d.calcScrollPos(J, K, M), y())
      }

      function x(a) {
        w(J + a, !0), f.$apply()
      }

      function y() {
        F.css("top", L + "px"), z()
      }

      function z() {
        var a = {
          topIndex: J,
          maxIndex: K,
          topPos: L,
          maxPos: M,
          filteredPageCount: f.filteredItems.length / G,
          filteredItemCount: f.filteredItems.length,
          visibleItems: A()
        };
        f.onScrollChangeFn(a), f.ngModel = a
      }

      function A() {
        return f.filteredItems.slice(J, J + G)
      }

      function B() {
        f.filteredItems = f.items, 0 === H ? b(C, 0) : (E.css("height", H + "px"), u()), w(0, !1)
      }

      function C() {
        H = D.prop("offsetHeight"), E.css("height", H + "px"), u()
      }

      f.filteredItems = [];
      var D = angular.element(g[0].querySelector(".vsscrollbarcontent")), E = angular.element(g[0].querySelector(".vsscrollbar")), F = E.children(), G = angular.isUndefined(h.itemsInPage) ? e.ITEMS_IN_PAGE : f.$eval(h.itemsInPage), H = angular.isUndefined(h.height) ? e.SCROLLBAR_HEIGHT : f.$eval(h.height), I = 0, J = 0, K = 0, L = 0, M = 0, N = "";
      f.boxHeight = e.SCROLLBOX_MIN_HEIGHT, f.scrollbarVisible = !0, F.on("mousedown touchstart", i), D.on("touchstart", l), E.on("click", o), F.on("click", p), D.on("mousewheel DOMMouseScroll", q), E.on("mousewheel DOMMouseScroll", q), F.on("keydown", r), f.$on("vsmessage", s), f.$on("$destroy", function () {
        F.off("mousedown touchstart", i), D.off("touchstart", l), E.off("click", o), F.off("click", p), D.off("mousewheel DOMMouseScroll", q), E.off("mousewheel DOMMouseScroll", q), F.off("keydown", r)
      }), f.scrollBoxFocus = function () {
        f.onFocusScrollboxFn({focused: !0})
      }, f.scrollBoxBlur = function () {
        f.onFocusScrollboxFn({focused: !1})
      }, B()
    }
  }
}]), angular.module("vsdropdown", ["vsscrollbar"]).constant("vsdropdownConfig", {
  ITEM_HEIGHT: 37,
  LIST_FOCUS_EVENT: "vsdropdown.listFocusEvent",
  OPERATION_ADD: "+",
  OPERATION_DEL: "-",
  TOOLTIP_OPEN_DELAY: 900,
  FILTERING_BEGIN_DELAY: 500
}).directive("vsdropdown", ["$timeout", "vsscrollbarEvent", function (a, b) {
  return {
    restrict: "EA",
    templateUrl: "templates/vsdropdown.html",
    scope: {options: "="},
    controller: ["$scope", "vsdropdownConfig", function (a, b) {
      a.config = b, a.filterText = "", a.showOverlay = !1, a.topIndex = 0, a.focusIdx = -1, a.listFocusEvent = function () {
        a.$broadcast(a.config.LIST_FOCUS_EVENT)
      }
    }],
    link: function (c, d, e) {
      function f(a, d) {
        a !== d && b.filter(c, a)
      }

      function g(d, e) {
        d !== e && a(function () {
          b.filter(c, "")
        })
      }

      function h(a, b) {
        angular.isUndefined(c.options.itemSelectCb) || c.options.itemSelectCb(c.selectedItems, a, b)
      }

      function i() {
        return c.focusIdx === c.options.visibleItemCount - 1 || c.focusIdx === c.filteredItemCount - 1
      }

      function j() {
        c.visiblePropName = c.options.input.isObject ? c.options.input.visiblePropName : null, c.selectedItems = c.options.selectedItems
      }

      c.selectedItems = [], c.showSelector = !1;
      var k = !1;
      c.selector = function () {
        c.showSelector = !c.showSelector, c.showSelector && (c.listFocusEvent(), c.focusIdx = 0)
      }, c.openOverlay = function () {
        c.showSelector && c.selector(), c.showOverlay = !0
      }, c.closeOverlay = function () {
        c.showOverlay = !1
      }, c.itemClicked = function (a, b) {
        var d = c.visibleItems[a];
        c.isItemSelected(d) ? c.removeItem(c.selectedItems.indexOf(d), b) : c.addItem(d, b), 1 === c.options.selection.maximum ? c.showSelector = !1 : c.focusIdx = a
      }, c.addItem = function (a, b) {
        b.stopPropagation(), c.options.selection.maximum > 1 ? (c.selectedItems.length === c.options.selection.maximum && c.removeItem(c.selectedItems.length - 1, b), c.selectedItems.push(a)) : c.selectedItems[0] = a, h(a, c.config.OPERATION_ADD)
      }, c.removeItem = function (a, b) {
        b.stopPropagation();
        var d = c.selectedItems[a];
        (a === c.selectedItems.length - 1 || 2 === c.selectedItems.length) && c.closeOverlay(), c.selectedItems.splice(a, 1), h(d, c.config.OPERATION_DEL)
      }, c.isItemSelected = function (a) {
        return -1 !== c.selectedItems.indexOf(a)
      }, c.onScrollChange = function (a, b, d, e, f, g, h) {
        c.topIndex = a, c.filteredItemCount = g, c.visibleItems = h
      }, c.onFocusScrollbox = function (a) {
        k = a
      }, c.keyDown = function (a) {
        k || ((13 === a.which || 38 === a.which || 40 === a.which || 27 === a.which) && a.preventDefault(), 13 === a.which && c.focusIdx > -1 ? c.itemClicked(c.focusIdx, a) : 38 === a.which ? 0 === c.focusIdx ? (b.setIndex(c, c.topIndex - c.options.visibleItemCount), c.focusIdx = c.filteredItemCount < c.options.visibleItemCount ? c.filteredItemCount - 1 : c.options.visibleItemCount - 1) : c.focusIdx-- : 40 === a.which ? i() ? (b.setIndex(c, c.topIndex + c.options.visibleItemCount), c.focusIdx = 0) : c.focusIdx++ : 27 === a.which && (c.showSelector = !1))
      }, c.clearFilter = function () {
        c.filterText = "", c.listFocusEvent()
      };
      var l = c.$watch("filterText", f), m = c.$watch("options.items.length", g);
      c.$on("$destroy", function () {
        l(), m()
      }), j()
    }
  }
}]).directive("listFocus", ["$timeout", function (a) {
  return {
    restrict: "A", scope: !1, link: function (b, c, d) {
      b.$on(b.config.LIST_FOCUS_EVENT, function () {
        a(function () {
          c[0].focus()
        })
      }), b.blur = function () {
        b.focusIdx = -1
      }, b.focus = function () {
        b.focusIdx = 0
      }
    }
  }
}]).directive("tooltipWindow", ["$compile", "$timeout", "$http", "$templateCache", function (a, b, c, d) {
  return {
    restrict: "A", scope: !1, link: function (e, f, g) {
      function h() {
        f[0].scrollWidth > f[0].offsetWidth && (n = b(function () {
          c.get("vstooltip.html", {cache: d}).success(function (b) {
            m = angular.element(b), f.append(a(m)(e))
          })
        }, e.config.TOOLTIP_OPEN_DELAY))
      }

      function i() {
        j(), angular.equals(m, null) || (m.remove(), m = null)
      }

      function j() {
        b.cancel(n), n = null
      }

      function k(a, b) {
        angular.equals(a, b) || i()
      }

      function l() {
        e.options.showTooltip && (f.on("mouseenter", h), f.on("mouseleave", i), o = e.$watch("topIndex", k))
      }

      var m = null, n = null, o = null;
      e.closeTooltip = function (a) {
        a.stopPropagation(), i()
      }, e.$on("$destroy", function () {
        f.off("mouseenter", h), f.off("mouseleave", i), angular.equals(o, null) || o()
      }), l()
    }
  }
}]).directive("popoverWindow", ["$compile", "$http", "$templateCache", function (a, b, c) {
  return {
    restrict: "A", scope: !1, link: function (d, e, f) {
      function g(a, b) {
        angular.equals(a, b) || d.closeProperties()
      }

      function h() {
        i = d.$watch("topIndex", g)
      }

      d.popover = null;
      var i = null;
      d.showProperties = function (f) {
        f.stopPropagation(), angular.equals(d.popover, null) ? b.get("vspopover.html", {cache: c}).success(function (b) {
          d.popover = angular.element(b), e.append(a(d.popover)(d))
        }) : d.closeProperties()
      }, d.closeProperties = function () {
        angular.equals(d.popover, null) || (d.popover.remove(), d.popover = null)
      }, d.$on("$destroy", function () {
        angular.equals(i, null) || i()
      }), h()
    }
  }
}]).directive("opacity", ["$interval", function (a) {
  return {
    restrict: "A", scope: !1, link: function (b, c, d) {
      function e() {
        b.opacity += .05
      }

      function f() {
        b.options.fadeInEffects && (g = a(e, 10, 20))
      }

      b.opacity = b.options.fadeInEffects ? 0 : 1;
      var g = null;
      b.$on("$destroy", function () {
        angular.equals(g, null) || a.cancel(g)
      }), f()
    }
  }
}]);